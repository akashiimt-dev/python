function convertDateTimeFormat(dateTimeString) {
    // Extract date and time using regex
    let match = dateTimeString.match(/(\d{4}-\d{2}-\d{2}) (\d{1,2}):(\d{2})(AM|PM)/i);

    if (!match) return null; // Return null if format doesn't match

    let [_, date, hour, minute, period] = match;

    // Convert hour to 24-hour format
    hour = parseInt(hour);
    if (period.toUpperCase() === "PM" && hour !== 12) {
        hour += 12;
    } else if (period.toUpperCase() === "AM" && hour === 12) {
        hour = 0;
    }

    // Format hour and minute as two digits
    let formattedTime = `${String(hour).padStart(2, '0')}:00:00`;

    return `${date}T${formattedTime}`;
}

// Example Usage
let input = "2025-02-27 02:00AM";
let output = convertDateTimeFormat(input);
console.log(output); // Output: "2025-02-27T02:


00:00"

function convertToAMPMFormat(isoString) {
    // Extract date and time using regex
    let match = isoString.match(/(\d{4}-\d{2}-\d{2})T(\d{2}):\d{2}:\d{2}/);
    
    if (!match) return null; // Return null if format doesn't match

    let [_, date, hour] = match;
    hour = parseInt(hour);

    // Determine AM or PM
    let period = hour >= 12 ? "PM" : "AM";

    // Convert to 12-hour format
    let hour12 = hour % 12 || 12; // 0 → 12, 13 → 1, etc.

    return `${date} ${hour12}:00${period}`;
}

function convertToAMPMFormat(isoString) {
    // Extract date and time using regex
    let match = isoString.match(/(\d{4}-\d{2}-\d{2})T(\d{2}):(\d{2}):\d{2}/);
    
    if (!match) return null; // Return null if format doesn't match

    let [_, date, hour, minute] = match;
    hour = parseInt(hour);

    // Determine AM or PM
    let period = hour >= 12 ? "PM" : "AM";

    // Convert to 12-hour format
    let hour12 = hour % 12 || 12; // 0 → 12, 13 → 1, etc.

    return `${date} ${hour12}:${minute}${period}`;
}

// Exa


//
