import java.lang.reflect.Method;

public class ReflectionUtil {
    public static Object getPropertyValue(Object instance, String propertyName) throws Exception {
        // Capitalize the first letter of the property name to form the getter method name
        String methodName = "get" + propertyName.substring(0, 1).toUpperCase() + propertyName.substring(1);
        
        // Get the class of the instance
        Class<?> clazz = instance.getClass();
        
        // Get the getter method
        Method method = clazz.getMethod(methodName);
        
        // Invoke the method on the instance and return the result
        return method.invoke(instance);
    }

    // Example usage
    public static void main(String[] args) {
        try {
            // Example class with a getter
            Person person = new Person("Alice", 30);
            
            // Get the value of the "name" property
            Object name = getPropertyValue(person, "name");
            System.out.println("Name: " + name); // Output: Name: Alice
            
            // Get the value of the "age" property
            Object age = getPropertyValue(person, "age");
            System.out.println("Age: " + age); // Output: Age: 30
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

// Example class
class Person {
    private String name;
    private int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }
}